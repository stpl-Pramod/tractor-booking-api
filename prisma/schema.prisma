// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Owners {
  owner_id   Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  phone      String    @db.VarChar(15)
  created_at DateTime  @default(now())
  tractors   Tractors[]
}

model Tractors {
  tractor_id         Int       @id @default(autoincrement())
  owner_id           Int
  brand              String    @db.VarChar(50)
  model              String    @db.VarChar(50)
  year               Int
  location           String    @db.VarChar(100)
  price_per_day      Decimal   @db.Decimal(10, 2)
  availability_status String   @db.VarChar(20)
  created_at         DateTime  @default(now())
  
  owner    Owners    @relation(fields: [owner_id], references: [owner_id])
  bookings Bookings[]
}

model Users {
  user_id    Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  email      String    @unique @db.VarChar(100)
  phone      String    @db.VarChar(15)
  created_at DateTime  @default(now())
  bookings   Bookings[]
}

model Bookings {
  booking_id     Int       @id @default(autoincrement())
  tractor_id     Int
  user_id        Int
  booking_date   DateTime
  start_date     DateTime
  end_date       DateTime
  booking_method String    @db.VarChar(10)
  status         String    @db.VarChar(20) @default("pending")
  created_at     DateTime  @default(now())
  updated_at     DateTime  @default(now()) @updatedAt

  tractor Tractors @relation(fields: [tractor_id], references: [tractor_id])
  user    Users    @relation(fields: [user_id], references: [user_id])
}
